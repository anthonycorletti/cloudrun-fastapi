steps:
  - name: gcr.io/cloud-builders/docker
    id: "postgres_up"
    args:
      [
        "run",
        "-d",
        "-e",
        "POSTGRES_HOST_AUTH_METHOD=trust",
        "-p",
        "5432:5432",
        "-v",
        "/var/run/postgresql:/var/run/postgresql",
        "--name=postgres",
        "--network=cloudbuild",
        "postgres",
      ]

  - name: jwilder/dockerize:0.6.1
    id: "postgres_expose_wait"
    args: ["dockerize", "-timeout=60s", "-wait=tcp://postgres:5432"]

  - name: python:3.8
    id: "python_install_config_test"
    args:
      - "sh"
      - "-c"
      - |
        pip3 install -r requirements.txt \
        && pytest tests -s --cov=. --cov-fail-under 100 --log-cli-level info
    env:
      - "PROJECT_ID=$PROJECT_ID"

  - name: gcr.io/cloud-builders/docker
    id: "postgres_down"
    args: ["rm", "--force", "postgres"]

  - id: "docker_build"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "us.gcr.io/$PROJECT_ID/cloudrunfastapi", "."]

  - id: "docker_push"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "us.gcr.io/$PROJECT_ID/cloudrunfastapi"]

  - id: "cloud_run_deploy"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    args:
      [
        "gcloud",
        "run",
        "deploy",
        "cloudrunfastapi-$BRANCH_NAME",
        "--image=us.gcr.io/$PROJECT_ID/cloudrunfastapi:latest",
        "--cpu=2",
        "--port=8080",
        "--memory=2048Mi",
        "--timeout=600",
        "--concurrency=20",
        "--platform=managed",
        "--max-instances=1000",
        "--region=us-central1",
        "--allow-unauthenticated",
        "--revision-suffix=$SHORT_SHA",
        "--set-env-vars=PROJECT_ID=$PROJECT_ID,SHORT_SHA=$SHORT_SHA",
        "--set-cloudsql-instances=$PROJECT_ID:us-central1:runfastapi",
        "--service-account=cloudrunfastapi@$PROJECT_ID.iam.gserviceaccount.com",
      ]
